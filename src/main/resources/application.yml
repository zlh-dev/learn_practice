spring:
  application:
    name: learn-practice
  profiles:
    # 选择配置文件
    active: test
  banner:
#    location: classpath:banner.txt # banner 文本文件路径
    # banner 图像文件路径（可以选择 png,jpg,gif 文件）
    image:
      location: classpath:logo.png
    charset: UTF-8 # banner 文件编码
  main:
      # banner 模式。有三种模式：console/log/off
      # console 打印到控制台（通过 System.out）
      # log - 打印到日志中
      # off - 关闭打印
    banner-mode: console # 是否开启启动图（默认console）
  output:
    ansi:
      enabled: detect # 检查终端是否支持ANSI，是的话就采用彩色输出
  # RDS控制台：https://rdsnext.console.aliyun.com
  datasource:
    # 数据库驱动：
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 数据源名称
    druid:
      url: jdbc:mysql://localhost:3306/blue?serverTimezone=UTC
      # 数据库用户名&密码：
      # 请在控制台中，对应数据库实例的"账号管理"功能下维护
      username: *
      password: *
      filters: config
      connect-properties: config.file=http://127.0.0.1/druid-pool.properties
  jackson:
    # 设置属性命名策略,对应jackson下PropertyNamingStrategy中的常量值，SNAKE_CASE-返回的json驼峰式转下划线，json body下划线传到后端自动转驼峰式
    property-naming-strategy: SNAKE_CASE
    # 全局设置@JsonFormat的格式pattern
    date-format: yyyy-MM-dd HH:mm:ss
    # 当地时区
    locale: zh
    # 设置全局时区
    time-zone: GMT+8
    # 常用，全局设置pojo或被@JsonInclude注解的属性的序列化方式
    default-property-inclusion: NON_NULL #不为空的属性才会序列化,具体属性可看JsonInclude.Include
    # 常规默认,枚举类SerializationFeature中的枚举属性为key，值为boolean设置jackson序列化特性,具体key请看SerializationFeature源码
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true # 返回的java.util.date转换成timestamp
      FAIL_ON_EMPTY_BEANS: true # 对象为空时是否报错，默认true
    # 枚举类DeserializationFeature中的枚举属性为key，值为boolean设置jackson反序列化特性,具体key请看DeserializationFeature源码
    deserialization:
      # 常用,json中含pojo不存在属性时是否失败报错,默认true
      FAIL_ON_UNKNOWN_PROPERTIES: false
    # 枚举类MapperFeature中的枚举属性为key，值为boolean设置jackson ObjectMapper特性
    # ObjectMapper在jackson中负责json的读写、json与pojo的互转、json tree的互转,具体特性请看MapperFeature,常规默认即可
    mapper:
      # 使用getter取代setter探测属性，如类中含getName()但不包含name属性与setName()，传输的vo json格式模板中依旧含name属性
      USE_GETTERS_AS_SETTERS: true #默认false
    # 枚举类JsonParser.Feature枚举类中的枚举属性为key，值为boolean设置jackson JsonParser特性
    # JsonParser在jackson中负责json内容的读取,具体特性请看JsonParser.Feature，一般无需设置默认即可
    parser:
      ALLOW_SINGLE_QUOTES: true # 是否允许出现单引号,默认false
    # 枚举类JsonGenerator.Feature枚举类中的枚举属性为key，值为boolean设置jackson JsonGenerator特性，一般无需设置默认即可
    # JsonGenerator在jackson中负责编写json内容,具体特性请看JsonGenerator.Feature
alibaba:
  cloud:
    # spring cloud access&secret config
    # 可以访问如下地址查看: https://usercenter.console.aliyun.com/#/manage/ak
    access-key: *
    secret-key: *
    # oss控制台: https://oss.console.aliyun.com
    oss:
      # oss云存储的EndPoint（地域节点）
      endpoint: oss-cn-hangzhou.aliyuncs.com

mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.code.entity
  # mybatis 的原生配置
  configuration:
    cache-enabled: false # 是否开启缓存
    map-underscore-to-camel-case: true # 是否开启自动驼峰命名规则（camel case）映射
    call-setters-on-nulls: true # MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列
    jdbc-type-for-null: 'null' # 如果type为空
  # MyBatis-Plus 全局策略配置
  global-config:
    banner: false # 是否显示mybatis-plus的图标
    db-config:
      id-type: ID_WORKER # 全局默认主键类型，AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID"
      logic-delete-field: deleted  #全局逻辑删除字段值 3.3.0开始支持，详情看下面。
      logic-delete-value: true # 逻辑已删除值(默认为 1)
      logic-not-delete-value: false # 逻辑未删除值(默认为 0)

pagehelper:
  reasonable: false # 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据
  support-methods-arguments: true
  params: count=countSql
  row-bounds-with-count: true
  helper-dialect: mysql

management:
  server:
    # Actuator Web 访问端口
    port: 8081
  endpoints:
    jmx:
      exposure:
        include: *
    web:
      exposure:
        include: *
  endpoint:
    health:
      show-details: always
logging:
  level:
    root: info
    org.springframework.boot.autoconfigure: error
    com.code.mapper: debug